<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>一位算士的博客 | a computor's blog: Posts tagged 'spyscope'</title>
  <description>一位算士的博客 | a computor's blog: Posts tagged 'spyscope'</description>
  <link>http://kejia.github.io/tags/spyscope.html</link>
  <lastBuildDate>Fri, 03 Jul 2015 19:42:51 UT</lastBuildDate>
  <pubDate>Fri, 03 Jul 2015 19:42:51 UT</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>spyscope实现原理</title>
   <link>http://kejia.github.io/blog/2015/07/03/spyscope实现原理/?utm_source=spyscope&amp;utm_medium=RSS</link>
   <guid>urn:http-kejia-github-io:-blog-2015-07-03-spyscope实现原理</guid>
   <pubDate>Fri, 03 Jul 2015 19:42:51 UT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;&lt;em&gt;目前，clojure尚未提供完善的非repl调试器，&lt;a href="http://github.com/dgrnbrg/spyscope"&gt;spyscope&lt;/a&gt;提供了较好的调试接口。&lt;a href="http://github.com/dgrnbrg/spyscope"&gt;spyscope&lt;/a&gt;把“#spy/p”等符号置于目标符号之前即可工作，其利用了reader的一个特性：edn tagged literal。&lt;/em&gt;&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;以下摘自《&lt;a href="http://clojure.org/reader" title="clojure's edn tagged elements"&gt;the reader&lt;/a&gt;》：&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;Tagged literals are Clojure&amp;rsquo;s implementation of edn tagged elements.&lt;/p&gt;
 &lt;p&gt;When Clojure starts, it searches for files named data_readers.clj at the root of the classpath. Each such file must contain a Clojure map of symbols, like this:&lt;/p&gt;&lt;/blockquote&gt;

&lt;div class="brush: clojure"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;foo/bar&lt;/span&gt; &lt;span class="nv"&gt;my.project.foo/bar&lt;/span&gt;
 &lt;span class="nv"&gt;foo/baz&lt;/span&gt; &lt;span class="nv"&gt;my.project/baz&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;blockquote&gt;
 &lt;p&gt;The key in each pair is a tag that will be recognized by the Clojure reader. The value in the pair is the fully-qualified name of a Var which will be invoked by the reader to parse the form following the tag. For example, given the data_readers.clj file above, the Clojure reader would parse this form:&lt;/p&gt;&lt;/blockquote&gt;

&lt;div class="brush: clojure"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="nv"&gt;foo/bar&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;blockquote&gt;
 &lt;p&gt;by invoking the Var #&amp;rsquo;my.project.foo/bar on the vector [1 2 3]. The data reader function is invoked on the form AFTER it has been read as a normal Clojure data structure by the reader.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://github.com/dgrnbrg/spyscope"&gt;spyscope&lt;/a&gt;即据此实现，其spyscope/src/data_readers.clj定义如下：&lt;/p&gt;

&lt;div class="brush: clojure"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;spy/p&lt;/span&gt; &lt;span class="nv"&gt;spyscope.core/print-log&lt;/span&gt;
 &lt;span class="nv"&gt;spy/d&lt;/span&gt; &lt;span class="nv"&gt;spyscope.core/print-log-detailed&lt;/span&gt;
 &lt;span class="nv"&gt;spy/t&lt;/span&gt; &lt;span class="nv"&gt;spyscope.core/trace&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;spyscope.core/print-log等被定义为普通函数： &lt;code&gt;clojure
(defn print-log
  "Reader function to pprint a form's value."
  [form]
  `(doto ~form pp/pprint))&lt;/code&gt; 用例：&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;spyscope.repl&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;take &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;repeat &lt;span class="c"&gt;#spy/p (+ 1 2 3)))&lt;/span&gt;
6
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; 6&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/html&gt;</description></item></channel></rss>