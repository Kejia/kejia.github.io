<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>一位算士的博客 | a computor's blog: Posts tagged 'spyscope'</title>
  <description>一位算士的博客 | a computor's blog: Posts tagged 'spyscope'</description>
  <link>http://kejia.github.io/tags/spyscope.html</link>
  <lastBuildDate>Fri, 03 Jul 2015 19:42:51 UT</lastBuildDate>
  <pubDate>Fri, 03 Jul 2015 19:42:51 UT</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>spyscope实现原理</title>
   <link>http://kejia.github.io/blog/2015/07/03/spyscope实现原理/?utm_source=spyscope&amp;utm_medium=RSS</link>
   <guid>urn:http-kejia-github-io:-blog-2015-07-03-spyscope实现原理</guid>
   <pubDate>Fri, 03 Jul 2015 19:42:51 UT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;&lt;em&gt;spyscope把“#spy/p”等符号置于目标符号之前即可工作，其利用了reader的一个特性：edn tagged literal。&lt;/em&gt;&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;以下摘自&lt;a href=""&gt;http&lt;/a&gt;://clojure.org/reader &lt;a href="dada.com" title="HAHA"&gt;haha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is &lt;a href="http://example.com/" title="Title"&gt;an example&lt;/a&gt; inline link.&lt;/p&gt;

&lt;blockquote&gt;
 &lt;p&gt;Tagged literals are Clojure&amp;rsquo;s implementation of edn tagged elements.&lt;/p&gt;
 &lt;p&gt;When Clojure starts, it searches for files named data_readers.clj at the root of the classpath. Each such file must contain a Clojure map of symbols, like this:&lt;/p&gt;
 &lt;blockquote&gt;
  &lt;p&gt;{foo/bar my.project.foo/bar  foo/baz my.project/baz}&lt;/p&gt;&lt;/blockquote&gt;
 &lt;p&gt;The key in each pair is a tag that will be recognized by the Clojure reader. The value in the pair is the fully-qualified name of a Var which will be invoked by the reader to parse the form following the tag. For example, given the data_readers.clj file above, the Clojure reader would parse this form:&lt;/p&gt;
 &lt;blockquote&gt;
  &lt;h1 id="foobar-"&gt;foo/bar [1 2 3]&lt;/h1&gt;&lt;/blockquote&gt;
 &lt;p&gt;by invoking the Var #&amp;rsquo;my.project.foo/bar on the vector [1 2 3]. The data reader function is invoked on the form AFTER it has been read as a normal Clojure data structure by the reader.&lt;/p&gt;&lt;/blockquote&gt;&lt;/html&gt;</description></item></channel></rss>